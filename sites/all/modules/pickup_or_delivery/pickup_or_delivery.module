<?php

/**
* @file
* Pickup or Delivery Module creates a checkout pane on the initial Checkout page that gives the user the option to either pickup their order for have it delivered. This is a simple radio button that will default to Pickup. When Pickup is selected, the Shipping address pane will be disabled and hidden. When delivery is chosen, normal commerce shipping rules will apply.
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function pickup_or_delivery_help($path, $arg) {
  switch ($path) {
    case "admin/help#pickup_or_delivery":
      return '<p>'.  t("Disables the Shipping information pane at checkout if the Pickup shipping service is choosen. Also changes the word Shipping to delivery where applicable.") .'</p>';
      break;
  }
}

/**
* Implements hook_block_info().

function pickup_or_delivery_block_info() {
  $blocks['pickup_or_delivery'] = array(
    'info' => t('Pickup or Delivery'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}*/

/**
*
* if the radio button for Pickup or Delivery pane is set to Pickup (default) then disable the shipping page and pane
*/

/**
 * Implements hook_commerce_checkout_pane_info().

function pickup_or_delivery_commerce_checkout_pane_info() {
  $checkout_panes = array();

  $checkout_panes['pickup_or_delivery'] = array(
    'title' => t('Pickup or Delivery'),
    'base' => 'pickup_or_delivery_pane',
    'file' => 'includes/pickup_or_delivery.checkout_pane.inc',
    'page' => 'checkout',
    'weight' => 1,
    'review' => TRUE,
  );

  return $checkout_panes;
}
*/

/*
* Hook hook_commerce_checkout_page_info_alter($checkout_pages)
*/
function pickup_or_delivery_commerce_checkout_page_info_alter(&$checkout_pages) {
  $checkout_pages['shipping']['title'] = 'Customer information';
  //dpm($checkout_pages);
}


/*
* Hook hook_commerce_checkout_pane_info_alter($checkout_pane)
*/
function pickup_or_delivery_commerce_checkout_pane_info_alter(&$checkout_pane) {
    global $user;
    // $checkout_pane actually holds ALL the panes...
    foreach($checkout_pane as $pane_name => &$pane_data) {
        // ...we only need to override one of them
        if($pane_name == 'customer_profile_shipping' && $pane_data['enabled']) {
		
			//changing the title from shipping information to delivery information
			$pane_data['title'] = 'Delivery information';
			
            // load current order
			
            $order = commerce_cart_order_load($user->uid);
			//dpm($order);
			//if this isn't here when you first come to the site you'll get an error because you don't have an order yet
			if ($order!=false && !empty($order->commerce_line_items)) {
				//drilling down into the commerce_order_total will get you the shipping service
				foreach($order->commerce_order_total['und']['0']['data']['components'] as $order_component => &$component_data) {
					if($component_data['name'] == 'flat_rate_pick_up'){
						$pane_data['enabled'] = 0;
					}else if($component_data['name'] == 'flat_rate_delivery_charge'){
						$pane_data['enabled'] = 1;
					}else if($component_data['name'] == 'flat_rate_delivery'){
						$pane_data['enabled'] = 1;
					}
				}
			}

		/*	
            if($order->commerce_order_total['und']['0']['data']['components']['2']['name'] == 'flat_rate_pick_up') {
			//dpm($order->commerce_order_total);
            // the pane is enabled by default, so we need to disable it
                $pane_data['enabled'] = 0;
            }
		*/	
        }
	
		//changing the shipping service title
		if($pane_name == 'commerce_shipping' && $pane_data['enabled']) {
			//change the shipping services pane title
			$pane_data['title'] = 'Pickup or Delivery?';
		}
		/*
		//testing the billing address hide/show enable/disable
		if($pane_name == 'customer_profile_shipping' && $pane_data['enabled']) {
			


		}
		*/
    }
}



/**
*************************
********TESTING AREA*****
*************************

 * Returns the payment details element for display via AJAX.
 
function commerce_payment_pane_checkout_form_details_refresh($form, $form_state) {
	return $form['commerce_payment']['payment_details'];
}

/**
 * Implementation of hook_form_alter().
 
function pickup_or_delivery_form_alter(&$form, &$form_state, $form_id) {
	switch ($form_id)  {
		case 'commerce_payment':
			$form['payment_method'] = array (
			  '#ajax' => array(
				'callback' => 'pickup_or_delivery_commerce_payment_pane_checkout_form_details_refresh',
				'wrapper' => 'payment-details',
			  ),
			);
		break;
	}
}

 * Returns the payment details element for display via AJAX.
 
function pickup_or_delivery_commerce_payment_pane_checkout_form_details_refresh($form, $form_state) {
	if(THE PAYMENT METHOD OPTION = CASH){
		SET THE BILLING ADDRESS PANE TO ENABLED = FALSE;
		AND HIDE IT VIA JQUERY;
	}ESLE IF (THE PAYMENT METHOD OPTION = CASH){
		SET THE BILLING ADDRESS PANE TO ENABLED = TRUE;
		AND SHOW IT VIA JQUERY;
	}
	return $form['commerce_payment']['payment_details'];
}


*/









